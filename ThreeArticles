1. ServerClientInOne:
This is for a webApplication, where both the backend and the frontend are coded into one git repo, and executed from the same server as one unit.  This removes the complexity of a separate client (which is a single Page App) and use only one port.
The concept:
a. Static paths are defined for the client as distinct from the paths to the back-end.
b. The startup file ('index.html') is served from the back-end, and has the baseUri for the html page appropiately set along with any other configs for that specific client.
This can be elaborated into a complete behaviour by having different clients based on some variable in the backend => example: different question paper for each student!

2. Json snippetizer


3. Recursion:
There are many articles on recursion

4. Do you need routing?
Just have one route to the server and let that handle the routing internally

4. Async Python components:
MultiEvent to single event: (inspired by the AND/OR gate logic)

5. The circular Mod function


Some proposed Theorems:
1. circular mods => mod(k*m/n) where m is not divisible by n goes thru all values 0..n-1 for k=1..n
Ex: 1/3 => 1,2,0; 5/3 => 2,1,0

2. The number of 0's in the seq k mod j where k=n..qn and n mod j !=0 is a constant. q=1,2,3,4..
Ex: n=5 j=3 => 6,9 = 2;  but 10 to 15 has only 12 = 1 so this theorem is wrong

3. There is a prime between n and 2n where n is a prime:



